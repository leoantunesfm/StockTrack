// <auto-generated />
using System;
using FillGaps.StockTrack.ConsoleApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FillGaps.StockTrack.ConsoleApp.Migrations
{
    [DbContext(typeof(StockTrackDbContext))]
    partial class StockTrackDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Movimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoProduto")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasDiscriminator<string>("TipoProduto").HasValue("Produto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Alimento", b =>
                {
                    b.HasBaseType("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Produto");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Alimento");
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Eletronico", b =>
                {
                    b.HasBaseType("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Produto");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Eletronico");
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Vestuario", b =>
                {
                    b.HasBaseType("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Produto");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Vestuario");
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Movimentacao", b =>
                {
                    b.HasOne("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FillGaps.StockTrack.ConsoleApp.Domain.ValueObjects.Quantidade", "Quantidade", b1 =>
                        {
                            b1.Property<Guid>("MovimentacaoId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Valor")
                                .HasColumnType("INTEGER");

                            b1.HasKey("MovimentacaoId");

                            b1.ToTable("Movimentacoes");

                            b1.WithOwner()
                                .HasForeignKey("MovimentacaoId");
                        });

                    b.Navigation("Produto");

                    b.Navigation("Quantidade")
                        .IsRequired();
                });

            modelBuilder.Entity("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Produto", b =>
                {
                    b.HasOne("FillGaps.StockTrack.ConsoleApp.Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FillGaps.StockTrack.ConsoleApp.Domain.ValueObjects.Quantidade", "Estoque", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Valor")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produtos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("FillGaps.StockTrack.ConsoleApp.Domain.ValueObjects.NomeProduto", "Nome", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produtos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Categoria");

                    b.Navigation("Estoque")
                        .IsRequired();

                    b.Navigation("Nome")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
